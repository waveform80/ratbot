#
# ratbot - Pylons production environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file

[DEFAULT]
# DO NOT SET TO TRUE
debug = false
# Uncomment and replace with the address which should receive any error reports
#email_to = admin@somedomain.com
smtp_server = localhost
error_email_from = paste@ratbotcomics.com

[server:main]
use = egg:Paste#http
host = 127.0.0.1
port = 8080

[sa_auth]
cookie_secret = GIVE_ME_A_UUID

[app:main]
use = egg:ratbot
full_stack = false
cache_dir = %(here)s/data
beaker.session.key = ratbot
beaker.session.secret = GIVE_ME_A_UUID
#beaker.cache.data_dir = %(here)s/data/cache
#beaker.session.data_dir = %(here)s/data/sessions

sqlalchemy.url = postgres:///ratbot
#echo shouldn't be used together with the logging module.
sqlalchemy.echo = false
sqlalchemy.echo_pool = false
sqlalchemy.pool_recycle = 3600

# This line ensures that Genshi will render xhtml when sending the
# output. Change to html or xml, as desired.
templating.genshi.method = xhtml

# DO NOT SET TO TRUE
set debug = false

# Logging configuration
# Add additional loggers, handlers, formatters here
# Uses python's logging config file format
# http://docs.python.org/lib/logging-config-fileformat.html

#turn this setting to "min" if you would like tw to produce minified
#javascript files (if your library supports that)
toscawidgets.framework.resource_variant = min

[loggers]
keys = root, ratbot, sqlalchemy, auth

[handlers]
keys = syslog

[formatters]
keys = generic

# If you create additional loggers, add them as a key to [loggers]
[logger_root]
level = INFO
handlers =

[logger_ratbot]
level = INFO
handlers =
qualname = ratbot

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_auth]
level = WARN
handlers =
qualname = auth

[handler_syslog]
class = logging.handlers.SysLogHandler
args = ()
level = NOTSET

[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
